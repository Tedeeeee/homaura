version: '3'
services:
  userMysql:
    image: 'mysql:5.7'
    environment:
      - 'MYSQL_DATABASE=member'
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=yes' # 빈 비밀번호 허용
    ports:
      - "13306:3306"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/userMysql:/var/lib/mysql

  productMysql:
    image: 'mysql:5.7'
    environment:
      - 'MYSQL_DATABASE=product'
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=yes'
    ports:
      - '13307:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/productMysql:/var/lib/mysql

  orderMysql:
    image: 'mysql:5.7'
    environment:
      - 'MYSQL_DATABASE=orders'
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=yes'
    ports:
      - '13308:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/orderMysql:/var/lib/mysql

  couponMysql:
    image: 'mysql:5.7'
    environment:
      - 'MYSQL_DATABASE=coupon'
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=yes'
    ports:
      - '13309:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/couponMysql:/var/lib/mysql

  wishListMysql:
    image: 'mysql:5.7'
    environment:
      - 'MYSQL_DATABASE=wishlist'
      - 'MYSQL_ALLOW_EMPTY_PASSWORD=yes' 
    ports:
      - '13310:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./data/wishListMysql:/var/lib/mysql

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"

  config-server:
    image: 'ddasick/config-server:1.0'
    environment:
      - spring.rabbitmq.host=rabbitmq
    ports:
      - "8888:8888"
    healthcheck:
      test: if netstat -ltn | grep -c "2181"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  discovery-server:
    image: 'ddasick/discovery-server:1.0'
    ports:
      - "8761:8761"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: if netstat -ltn | grep -c "8761"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  apigateway-server:
    image: 'ddasick/apigateway-server:1.0'
    ports:
      - "8083:8083"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    depends_on:
      discovery-server:
        condition: service_healthy
    healthcheck:
      test: if netstat -ltn | grep -c "8083"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: if netstat -ltn | grep -c "2181"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:29092
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: if netstat -ltn | grep -c "9092"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  member-service:
    image: 'ddasick/member-service:1.0'
    ports:
      - "8080:8080"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://userMysql:3306/member?useSSL=false
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - kafka
      - apigateway-server
      - config-server
      - userMysql
    healthcheck:
      test: if netstat -ltn | grep -c "8080"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  product-service:
    image: 'ddasick/product-service:1.0'
    ports:
      - "8082:8082"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://productMysql:3306/product?useSSL=false
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    depends_on:
      - apigateway-server
      - config-server
      - productMysql
    healthcheck:
      test: if netstat -ltn | grep -c "8082"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  order-service:
    image: 'ddasick/order-service:1.0'
    ports:
      - "8081:8081"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://orderMysql:3306/orders?useSSL=false
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    depends_on:
      - apigateway-server
      - config-server
      - orderMysql
    healthcheck:
      test: if netstat -ltn | grep -c "8081"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2

  wishlist-service:
    image: 'ddasick/wishlist-service:1.0'
    ports:
      - "8085:8085"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://wishListMysql:3306/wishlist?useSSL=false
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
    depends_on:
      - apigateway-server
      - config-server
      - wishListMysql
    healthcheck:
      test: if netstat -ltn | grep -c "8085"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2
      
  coupon-service:
    image: 'ddasick/coupon-service:1.0'
    ports:
      - "8084:8084"
    environment:
      - spring.cloud.config.uri=http://config-server:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.datasource.url=jdbc:mysql://couponMysql:3306/coupon?useSSL=false
      - spring.data.redis.host=redis
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - spring.kafka.bootstrap-servers=kafka:9092
    depends_on:
      - apigateway-server
      - config-server
      - couponMysql
    healthcheck:
      test: if netstat -ltn | grep -c "8084"; then echo 0; else echo 1; fi
      interval: 10s
      timeout: 5s
      retries: 2